/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package toSubmit;

import java.awt.print.PrinterException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class printReceipt extends javax.swing.JFrame {

    /**
     * Creates new form printReceipt
     */
    public printReceipt(int transactionID, String customerID) {
        initComponents();
        this.transactionID = transactionID;
        this.customerID = customerID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Gotham Bold", 0, 25)); // NOI18N
        jLabel1.setText("TRANSACTION RECEIPT");

        area.setColumns(20);
        area.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        jButton1.setFont(new java.awt.Font("Gotham Bold", 0, 11)); // NOI18N
        jButton1.setText("GENERATE RECEIPT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Gotham Bold", 0, 11)); // NOI18N
        jButton2.setText("PRINT RECEIPT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(jLabel1)))
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection connect = null;
        Statement statement = null, statement2 = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null, resultSet2 = null, resultSet3 = null, resultSet4 = null, resultSet5 = null;
        
        try {
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/luckyhoteldatabase", "root", "");
            statement = connect.createStatement();
            statement2 = connect.createStatement();
            area.setText("---------------------------------------------------------------------------------------\n "
                       + "          BOOKING INFORMATION & TRANSACTION CONFIRMATION\n"
                       + "---------------------------------------------------------------------------------------\n"
                       + "Information retrieved at " + java.time.LocalDate.now());
            String SQL = "SELECT customerID, customerName, email FROM customeruser WHERE customerID = '" + customerID + "'";
            resultSet = statement.executeQuery(SQL);
            if (resultSet.next()){
                area.setText(area.getText() + "\n\nCustomer ID \t\t\t: " + resultSet.getString("customerID") + "\nCustomer Name \t\t: " + resultSet.getString("customerName")
                            + "\nCustomer Email \t\t: " + resultSet.getString("email"));
                
                String SQL2 = "SELECT bookingID FROM bookingrooms WHERE transactionID = " + transactionID; 
                resultSet = statement.executeQuery(SQL2);
                if (resultSet.next()){
                    int bookingID = resultSet.getInt("bookingID");
                    area.setText(area.getText() + "\nBooking ID \t\t\t: " + Integer.toString(resultSet.getInt("bookingID")));
                    
                    String SQL3 = "SELECT transactionID, amountPaid FROM transaction WHERE transactionID = " + transactionID + " AND customerID = '" + customerID + "'";
                    resultSet = statement.executeQuery(SQL3);
                    if (resultSet.next()){
                        area.setText(area.getText() + "\nTransaction ID \t\t: " + Integer.toString(resultSet.getInt("transactionID")) + "\nAmount Paid \t\t\t: RM" + Double.toString(resultSet.getDouble("amountPaid")));
                    
                    String SQL4 = "SELECT roomID, roomPrice FROM room WHERE roomID IN (SELECT roomID FROM transaction WHERE transactionID = " + transactionID + ")";
                    resultSet = statement.executeQuery(SQL4);
                    if (resultSet.next()){
                        String roomID = resultSet.getString("roomID");
                        area.setText(area.getText() + "\nRoom Name \t\t\t: " + resultSet.getString("roomID") + "\nRoom Price \t\t\t: RM" + Double.toString(resultSet.getDouble("roomPrice")));
                        
                        String SQL5 = "SELECT amountOfGuest, amountOfBed FROM roomtype WHERE roomID = '" + roomID + "'";
                        resultSet = statement.executeQuery(SQL5);
                        if (resultSet.next()) {
                            area.setText(area.getText() + "\nAmount of Guest(s) supported \t: " + Integer.toString(resultSet.getInt("amountOfGuest"))
                                        + "\nAmount of Bed(s) supported \t: " + Integer.toString(resultSet.getInt("amountOfBed")));
                            
                            String SQL6 = "SELECT dateBookingStart, dateBookingEnd FROM bookingdates WHERE bookingID = " + bookingID;
                            resultSet = statement.executeQuery(SQL6);
                            if (resultSet.next()) {
                                area.setText(area.getText() + "\nStarting Booking Date \t\t: " + resultSet.getString("dateBookingStart") + "\nEnding Booking Date \t\t: " + resultSet.getString("dateBookingEnd"));
                            }
                        }
                        
                    } }
                }
            }
            area.setText(area.getText() + "\n---------------------------------------------------------------------------------------\n "
                       + "  THANK YOU! WE WISH YOU HAVE A LUXURIOUS MOMENT WITH US!\n"
                       + "---------------------------------------------------------------------------------------");
        } catch (Exception e) {
            
        }
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            area.print();
        } catch (PrinterException ex) {
            Logger.getLogger(printReceipt.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private int transactionID;
    private String customerID;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
